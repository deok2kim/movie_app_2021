{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigator.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","console","log","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","location","history","undefined","push","Navigator","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAgBeA,MAbf,SAAeC,GAEb,OADAC,QAAQC,IAAIF,GAEV,sBAAKG,UAAU,mBAAf,UACE,gJAIA,kE,gFCmCSC,MAzCf,YAA4D,IAA5CC,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAChD,OACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACLN,QACAD,OACAI,SACAF,UACAC,WARN,SAWE,sBAAKN,UAAU,QAAf,UACE,qBAAKW,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,sBAAKJ,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BI,IAC9B,oBAAIJ,UAAU,cAAd,SAA6BG,IAC7B,oBAAIH,UAAU,gBAAd,SACGO,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAIf,UAAU,eAAd,SACGc,GAD+BC,QAKtC,oBAAGf,UAAU,iBAAb,UAA+BK,EAAQW,MAAM,EAAG,KAAhD,kBCqBKC,G,kNA7CbP,MAAQ,CACNQ,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGCJ,EAHD,EAERK,KACEA,KAAOL,OAKX,EAAKM,SAAS,CAACN,SAAQD,WAAW,IARxB,2C,uDAUZ,WACEQ,KAAKN,c,oBAEP,WACE,MAA4BM,KAAKhB,MAA1BQ,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAClB,OACE,yBAASnB,UAAU,YAAnB,SACGkB,EACC,qBAAKlB,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGmB,EAAON,KAAI,SAACc,GAAD,OACV,cAAC,EAAD,CAEEzB,GAAIyB,EAAMzB,GACVC,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,QANToB,EAAMzB,e,GA9BR2B,IAAMC,YCcVC,E,uKAhBb,WACE,MAA4BL,KAAK7B,MAA1BmC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,aACMC,IAAnBF,EAAStB,OACXuB,EAAQE,KAAK,O,oBAGjB,WACE,IAAOH,EAAYN,KAAK7B,MAAjBmC,SACP,OAAIA,EAAStB,MACJ,0CAAasB,EAAStB,MAAMN,SAE5B,S,GAZQyB,IAAMC,W,MCWZM,MARf,WACE,OACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,IAAD,CAAMQ,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uB,MCYS6B,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWvB,IACxC,cAAC,IAAD,CAAOqB,KAAK,SAASE,UAAW5C,IAChC,cAAC,IAAD,CAAO0C,KAAK,aAAaE,UAAWT,QCJ3BU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC1DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.731fb847.chunk.js","sourcesContent":["import React from 'react';\r\nimport './About.css';\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        “Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.”\r\n      </span>\r\n      <span>− George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\n\r\nfunction Movie({id, year, title, summary, poster, genres}) {\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname: `/movie/${id}`,\r\n        state: {\r\n          title,\r\n          year,\r\n          genres,\r\n          summary,\r\n          poster,\r\n        },\r\n      }}>\r\n      <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li className=\"genres_genre\" key={index}>\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: {movies},\r\n      },\r\n    } = await axios.get(\r\n      'https://yts-proxy.now.sh/list_movies.json?sort_by=rating',\r\n    );\r\n    this.setState({movies, isLoading: false});\r\n  };\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n  render() {\r\n    const {isLoading, movies} = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    const {location, history} = this.props;\r\n    if (location.state === undefined) {\r\n      history.push('/');\r\n    }\r\n  }\r\n  render() {\r\n    const {location} = this.props;\r\n    if (location.state) {\r\n      return <span>Hello {location.state.title}</span>;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './Navigator.css';\r\n\r\nfunction Navigator() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\nexport default Navigator;\r\n","import React from 'react';\nimport {HashRouter, Route} from 'react-router-dom';\n\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Detail from './routes/Detail';\nimport Navigator from './components/Navigator';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigator />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}